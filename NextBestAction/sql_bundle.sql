WITH MAPPING as (
	SELECT A.KNDNR, A.KUNWE, B.VBELN, B.KUNNR
	FROM [APAC_DATA_REPO].[dbo].[PEA_CE10COC] A
	INNER JOIN [APAC_Data_Repo].[dbo].[PEA300_LIKP] B ON B.KUNNR = A.KUNWE
    WHERE A.[LAND1] ='AU'
    AND A.[BUDAT] >= 'TMINUS6_TIME_SET' --min_date_set
    AND A.[BUDAT] < 'TMINUS0_TIME_SET' --max_date_set
	AND B.LDDAT >= 'TMINUS6_TIME_SET' --min_date_set
    AND B.LDDAT < 'TMINUS0_TIME_SET' --max_date_set
	GROUP BY A.KNDNR, A.KUNWE, B.VBELN, B.KUNNR
),
CUSTOMER_TABLE AS (
    SELECT A.KNDNR,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' THEN ISNULL([VVQ13],0) ELSE 0 END) AS CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS7_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_1_CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS8_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_2_CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS9_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_3_CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS10_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_4_CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS11_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_5_CCH,
        SUM(CASE WHEN [VVQ01_ME] = 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS12_TIME_SET' THEN ISNULL([VVQ13],0) ELSE 0 END) AS T_6_CCH,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS7_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_1_PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS8_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_2_PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS9_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_3_PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS10_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_4_PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS11_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_5_PRODUCT_SALES,
        SUM(CASE WHEN [VVQ01_ME] <> 'CMO' AND [VVQ01_ME] <> 'CDA' AND DATEFROMPARTS(YEAR(BUDAT), MONTH(BUDAT), 1) = 'TMINUS12_TIME_SET'
            THEN ((ISNULL([VVR98],0)+ISNULL([VVR99],0)+ISNULL([VVR95],0)+ISNULL([VVRR2],0)+ISNULL([VVR03],0)+ISNULL([VVR94],0)+ISNULL([VVR88],0)+ISNULL([VVRR1],0))-(ISNULL([VVR93],0)+ISNULL([VVR92],0)+ISNULL([VVR89],0)+ISNULL([VVR70],0))) END )
            AS T_6_PRODUCT_SALES
    FROM [APAC_DATA_REPO].[dbo].[PEA_CE10COC] A
    WHERE A.[LAND1] ='AU'
    AND A.[BUDAT] >= 'TMINUS18_TIME_SET' --min_date_set
    AND A.[BUDAT] < 'TMINUS12_TIME_SET' --max_date_set
	AND EXISTS (SELECT 1 FROM MAPPING WHERE MAPPING.KNDNR = A.KNDNR)
    GROUP BY KNDNR
),

MATERIALS AS (
SELECT
	KUNNR,
	AVG(AVG_TIME_DELIVERY) AS AVG_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS7_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_1_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS8_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_2_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS9_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_3_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS10_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_4_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS11_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_5_TIME_DELIVERY,
	AVG(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(LDDAT), MONTH(LDDAT), 1) = 'TMINUS12_TIME_SET' THEN AVG_TIME_DELIVERY END) AS T_6_TIME_DELIVERY,
	COUNT(DISTINCT ROUTE) AS CNTD_ROUTE,
    COUNT(DISTINCT CASE WHEN TRAGR IN ('0C21','0C09','0C15','0C11','0C12','0C18','0C08','0C20','0C13','0C17','0C10','0C14','0C16','0C19') THEN VBELN END) CNTD_DANGEROUS,
    COUNT(DISTINCT CASE WHEN TRAGR IN ('0C03','0C06','0C05','0C07','0C01','0C04','0C02') THEN VBELN END) CNTD_GENERAL,
    COUNT(DISTINCT CASE WHEN TRAGR IN ('0C09','0C08','0C10','0C06','0C04') THEN VBELN END) CNTD_AIR,
    COUNT(DISTINCT CASE WHEN TRAGR IN ('0C20','0C19','0C05','0C02') THEN VBELN END) CNTD_SEA,
    COUNT(DISTINCT CASE WHEN TRAGR IN ('0C13','0C17','0C14') THEN VBELN END) CNTD_WATERWAY,
    COUNT(DISTINCT CASE WHEN LFART IN ('0CD1','0CD2','0CD3','0CD4') THEN VBELN END) CNTD_DEBIT_ITEMS,
    COUNT(DISTINCT CASE WHEN LFART IN ('0CK1','0CK2','0CK3','0CK4') THEN VBELN END) CNTD_CONSIGNMENT,
    COUNT(DISTINCT CASE WHEN LFART IN ('0CN1','0CN2','0CN3','0CN4') THEN VBELN END) CNTD_STANDARD,
    COUNT(DISTINCT CASE WHEN LFART IN ('0CB1','0CB2','0CB3','0CB4') THEN VBELN END) CNTD_THIRDPARTY,
    COUNT(DISTINCT CASE WHEN KDGRP = 'D0' THEN VBELN END) CNTD_D0_KDGRP,
    COUNT(DISTINCT CASE WHEN KDGRP IS NULL THEN VBELN END) CNTD_NULL_KDGRP,
    COUNT(DISTINCT CASE WHEN KDGRP = 'GF' THEN VBELN END) CNTD_GF_KDGRP
	FROM (
		SELECT
			ISNULL(DATEDIFF(day, LAG(LDDAT) OVER (PARTITION BY KUNNR ORDER BY LDDAT), LDDAT),0) AVG_TIME_DELIVERY,
			*
		FROM [APAC_Data_Repo].[dbo].[PEA300_LIKP]
		WHERE LDDAT >= 'TMINUS18_TIME_SET' --min_date_set
		AND LDDAT < 'TMINUS6_TIME_SET' --max_date_set
	) A
	GROUP BY KUNNR
),

PRODUCTS AS (
SELECT VBELN,
	AVG(mth_stock_diff) AVG_STOCK_DIFF,
	MAX(mth_max_stock_diff) MAX_STOCK_DIFF,
	MIN(mth_min_stock_diff) MIN_STOCK_DIFF,
	SUM(CNTD_NULL_DIFOT) SUM_NULL_DIFOT,
	SUM(CNTD_DIFOT) SUM_DIFOT,
	SUM(CNTD_Z08DIFOT) SUM_Z08DIFOT,
	AVG(CNTD_NULL_DIFOT) AVG_NULL_DIFOT,
	AVG(CNTD_DIFOT) AVG_DIFOT,
	AVG(CNTD_Z08DIFOT) AVG_Z08DIFOT,
	AVG(CNTD_Z01DIFOT) AVG_Z01DIFOT,
	AVG(CNTD_P07DIFOT) AVG_P07DIFOT,
	AVG(CNTD_MTH_DATES) AVG_MTH_DATES,
	AVG(CNTD_MTH_ENTRIES) AVG_MTH_ENTRIES,
	SUM(ISNULL(SUM_MTH_VOL_KG,0)) SUM_MTH_VOL_KG,
	SUM(ISNULL(SUM_MTH_LFIMG_CYL,0)) SUM_MTH_LFIMG_CYL,
	SUM(ISNULL(SUM_MTH_VOLUM_M3,0)) SUM_MTH_VOLUM_M3,
	SUM(ISNULL(CNTD_MATNR,0)) CNTD_MATNR,
	SUM(ISNULL(CNTD_MATKL,0)) CNTD_MATKL,
	AVG(ISNULL(CNTD_MATNR,0)) AVG_MATNR,
	AVG(ISNULL(CNTD_MATKL,0)) AVG_MATKL,
	SUM(ISNULL(CNTD_SHIPTO,0)) CNTD_SHIPTO,
	SUM(ISNULL(T_1_ENTRIES,0)) T_1_ENTRIES,
	SUM(ISNULL(T_2_ENTRIES,0)) T_2_ENTRIES,
	SUM(ISNULL(T_3_ENTRIES,0)) T_3_ENTRIES,
	SUM(ISNULL(T_4_ENTRIES,0)) T_4_ENTRIES,
	SUM(ISNULL(T_5_ENTRIES,0)) T_5_ENTRIES,
	SUM(ISNULL(T_6_ENTRIES,0)) T_6_ENTRIES
FROM (
    SELECT VBELN,
        CAST(DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) AS DATE) AS mth,
        SUM(LGMNG) AS mth_stock_diff,
        MAX(LGMNG) AS mth_max_stock_diff,
        MIN(LGMNG) AS mth_min_stock_diff,
        COUNT(DISTINCT CASE WHEN MVGR1 IS NULL THEN VGBEL END) AS CNTD_NULL_DIFOT,
        COUNT(DISTINCT CASE WHEN MVGR1 IS NOT NULL THEN VGBEL END) AS CNTD_DIFOT,
        COUNT(DISTINCT CASE WHEN MVGR1 = 'Z08' THEN VGBEL END) AS CNTD_Z08DIFOT,
        COUNT(DISTINCT CASE WHEN MVGR1 = 'S10' THEN VGBEL END) AS CNTD_S10DIFOT,
        COUNT(DISTINCT CASE WHEN MVGR1 = 'Z01' THEN VGBEL END) AS CNTD_Z01DIFOT,
        COUNT(DISTINCT CASE WHEN MVGR1 = 'P07' THEN VGBEL END) AS CNTD_P07DIFOT,
        COUNT(DISTINCT ERDAT) AS CNTD_MTH_DATES,
        COUNT(DISTINCT VGBEL) AS CNTD_MTH_ENTRIES,
        SUM(CASE WHEN Prod.GEWEI = 'KG'  THEN BRGEW END) AS SUM_MTH_VOL_KG,
        SUM(CASE WHEN Prod.MEINS = 'CYL'  THEN LFIMG END) AS SUM_MTH_LFIMG_CYL,
        SUM(CASE WHEN Prod.VOLEH = 'M3' THEN VOLUM END) AS SUM_MTH_VOLUM_M3,
		COUNT(DISTINCT MATNR) AS CNTD_MATNR,
		COUNT(DISTINCT MATKL) AS CNTD_MATKL,
		COUNT(DISTINCT VBELN) AS CNTD_SHIPTO,
		COUNT(DISTINCT VGBEL) AS CNTD_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS7_TIME_SET' THEN VGBEL END) AS T_1_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS8_TIME_SET' THEN VGBEL END) AS T_2_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS9_TIME_SET' THEN VGBEL END) AS T_3_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS10_TIME_SET' THEN VGBEL END) AS T_4_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS11_TIME_SET' THEN VGBEL END) AS T_5_ENTRIES,
		COUNT(DISTINCT CASE WHEN DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) = 'TMINUS12_TIME_SET' THEN VGBEL END) AS T_6_ENTRIES
    FROM [APAC_Data_Repo].[dbo].[PEA300_LIPS] Prod
    WHERE ERDAT >= 'TMINUS18_TIME_SET' AND ERDAT < 'TMINUS6_TIME_SET'
    GROUP BY VBELN, CAST(DATEFROMPARTS(YEAR(ERDAT), MONTH(ERDAT), 1) AS DATE)
	) A
	GROUP BY VBELN
),

NEW_PREDICT AS (
	SELECT
	Prod.VBELN,
	COUNT(DISTINCT MATNR) AS NEW_MATNR,
	COUNT(DISTINCT MATKL) AS NEW_MATKL,
	COUNT(DISTINCT VGBEL) AS NEW_ENTRIES
	FROM [APAC_Data_Repo].[dbo].[PEA300_LIPS] Prod
	WHERE Prod.ERDAT >= 'TMINUS6_TIME_SET'
		AND Prod.ERDAT < 'TMINUS0_TIME_SET'
	AND NOT EXISTS (SELECT 1 FROM
		[APAC_Data_Repo].[dbo].[PEA300_LIPS] OLD
		WHERE OLD.ERDAT >= 'TMINUS18_TIME_SET'
		AND OLD.ERDAT < 'TMINUS6_TIME_SET'
		AND OLD.VBELN = Prod.VBELN
		AND OLD.MATNR = Prod.MATNR
		AND OLD.MATKL = Prod.MATKL
		AND OLD.VGBEL = Prod.VGBEL
		)
	GROUP BY Prod.VBELN
)

SELECT
    MAPPING.KNDNR AS CUSTOMER_NUMBER,
    SUM(CUSTOMER_TABLE.CCH) CCH,
    AVG(CUSTOMER_TABLE.CCH) AVG_CCH,
    SUM(T_1_CCH) T_1_CCH,
    SUM(T_2_CCH) T_2_CCH,
    SUM(T_3_CCH) T_3_CCH,
    SUM(T_4_CCH) T_4_CCH,
    SUM(T_5_CCH) T_5_CCH,
    SUM(T_6_CCH) T_6_CCH,
    AVG(T_1_CCH) AVG_T_1_CCH,
    AVG(T_2_CCH) AVG_T_2_CCH,
    AVG(T_3_CCH) AVG_T_3_CCH,
    AVG(T_4_CCH) AVG_T_4_CCH,
    AVG(T_5_CCH) AVG_T_5_CCH,
    AVG(T_6_CCH) AVG_T_6_CCH,
    SUM(PRODUCT_SALES) PRODUCT_SALES,
    SUM(T_1_PRODUCT_SALES) T_1_PRODUCT_SALES,
    SUM(T_2_PRODUCT_SALES) T_2_PRODUCT_SALES,
    SUM(T_3_PRODUCT_SALES) T_3_PRODUCT_SALES,
    SUM(T_4_PRODUCT_SALES) T_4_PRODUCT_SALES,
    SUM(T_5_PRODUCT_SALES) T_5_PRODUCT_SALES,
    SUM(T_6_PRODUCT_SALES) T_6_PRODUCT_SALES,
    AVG(T_1_PRODUCT_SALES) AVG_T_1_PRODUCT_SALES,
    AVG(T_2_PRODUCT_SALES) AVG_T_2_PRODUCT_SALES,
    AVG(T_3_PRODUCT_SALES) AVG_T_3_PRODUCT_SALES,
    AVG(T_4_PRODUCT_SALES) AVG_T_4_PRODUCT_SALES,
    AVG(T_5_PRODUCT_SALES) AVG_T_5_PRODUCT_SALES,
    AVG(T_6_PRODUCT_SALES) AVG_T_6_PRODUCT_SALES,
    SUM(NEW_PREDICT.NEW_MATNR) AS NEW_MATNR,
    SUM(NEW_PREDICT.NEW_MATKL) AS NEW_MATKL,
    SUM(NEW_PREDICT.NEW_ENTRIES) AS NEW_ENTRIES,
    SUM(MATERIALS.CNTD_DANGEROUS) CNTD_DANGEROUS,
    SUM(MATERIALS.CNTD_GENERAL) CNTD_GENERAL,
    SUM(MATERIALS.CNTD_AIR) CNTD_AIR,
    SUM(MATERIALS.CNTD_SEA) CNTD_SEA,
    SUM(MATERIALS.CNTD_WATERWAY) CNTD_WATERWAY,
    SUM(MATERIALS.CNTD_DEBIT_ITEMS) CNTD_DEBIT_ITEMS,
    SUM(MATERIALS.CNTD_CONSIGNMENT) CNTD_CONSIGNMENT,
    SUM(MATERIALS.CNTD_STANDARD) CNTD_STANDARD,
    SUM(MATERIALS.CNTD_THIRDPARTY) CNTD_THIRDPARTY,
    SUM(MATERIALS.CNTD_D0_KDGRP) CNTD_D0_KDGRP,
    SUM(MATERIALS.CNTD_NULL_KDGRP) CNTD_NULL_KDGRP,
    SUM(MATERIALS.CNTD_GF_KDGRP) CNTD_GF_KDGRP,
    AVG(MATERIALS.AVG_TIME_DELIVERY) TIME_DELIVERY,
	SUM(ISNULL(CNTD_MATNR,0)) CNTD_MATNR,
	SUM(ISNULL(CNTD_MATKL,0)) CNTD_MATKL,
	AVG(ISNULL(CNTD_MATNR,0)) AVG_MATNR,
	AVG(ISNULL(CNTD_MATKL,0)) AVG_MATKL,
	SUM(ISNULL(CNTD_SHIPTO,0)) CNTD_SHIPTO,
	SUM(ISNULL(T_1_ENTRIES,0)) T_1_ENTRIES,
	SUM(ISNULL(T_2_ENTRIES,0)) T_2_ENTRIES,
	SUM(ISNULL(T_3_ENTRIES,0)) T_3_ENTRIES,
	SUM(ISNULL(T_4_ENTRIES,0)) T_4_ENTRIES,
	SUM(ISNULL(T_5_ENTRIES,0)) T_5_ENTRIES,
	SUM(ISNULL(T_6_ENTRIES,0)) T_6_ENTRIES
FROM MAPPING
LEFT JOIN NEW_PREDICT ON NEW_PREDICT.VBELN = MAPPING.VBELN
INNER JOIN MATERIALS ON MATERIALS.KUNNR = MAPPING.KUNNR
INNER JOIN CUSTOMER_TABLE ON CUSTOMER_TABLE.KNDNR = MAPPING.KNDNR
INNER JOIN PRODUCTS ON MAPPING.VBELN = PRODUCTS.VBELN
GROUP BY MAPPING.KNDNR
